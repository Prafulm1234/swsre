'use strict';
const escapeStringRegexp = require('escape-string-regexp');

const platform = process.platform;

const main = {
	tick: 'â',
	cross: 'â',
	star: 'â',
	square: 'â',
	squareSmall: 'â»',
	squareSmallFilled: 'â¼',
	play: 'â¶',
	circle: 'â¯',
	circleFilled: 'â',
	circleDotted: 'â',
	circleDouble: 'â',
	circleCircle: 'â',
	circleCross: 'â§',
	circlePipe: 'â¾',
	circleQuestionMark: '?â',
	bullet: 'â',
	dot: 'â¤',
	line: 'â',
	ellipsis: 'â¦',
	pointer: 'â¯',
	pointerSmall: 'âº',
	info: 'â¹',
	warning: 'â ',
	hamburger: 'â°',
	smiley: 'ã¡',
	mustache: 'à·´',
	heart: 'â¥',
	arrowUp: 'â',
	arrowDown: 'â',
	arrowLeft: 'â',
	arrowRight: 'â',
	radioOn: 'â',
	radioOff: 'â¯',
	checkboxOn: 'â',
	checkboxOff: 'â',
	checkboxCircleOn: 'â§',
	checkboxCircleOff: 'â¾',
	questionMarkPrefix: '?â',
	oneHalf: 'Â½',
	oneThird: 'â',
	oneQuarter: 'Â¼',
	oneFifth: 'â',
	oneSixth: 'â',
	oneSeventh: 'â',
	oneEighth: 'â',
	oneNinth: 'â',
	oneTenth: 'â',
	twoThirds: 'â',
	twoFifths: 'â',
	threeQuarters: 'Â¾',
	threeFifths: 'â',
	threeEighths: 'â',
	fourFifths: 'â',
	fiveSixths: 'â',
	fiveEighths: 'â',
	sevenEighths: 'â'
};

const win = {
	tick: 'â',
	cross: 'Ã',
	star: '*',
	square: 'â',
	squareSmall: '[ ]',
	squareSmallFilled: '[â]',
	play: 'âº',
	circle: '( )',
	circleFilled: '(*)',
	circleDotted: '( )',
	circleDouble: '( )',
	circleCircle: '(â)',
	circleCross: '(Ã)',
	circlePipe: '(â)',
	circleQuestionMark: '(?)',
	bullet: '*',
	dot: '.',
	line: 'â',
	ellipsis: '...',
	pointer: '>',
	pointerSmall: 'Â»',
	info: 'i',
	warning: 'â¼',
	hamburger: 'â¡',
	smiley: 'âº',
	mustache: 'âââ',
	heart: main.heart,
	arrowUp: main.arrowUp,
	arrowDown: main.arrowDown,
	arrowLeft: main.arrowLeft,
	arrowRight: main.arrowRight,
	radioOn: '(*)',
	radioOff: '( )',
	checkboxOn: '[Ã]',
	checkboxOff: '[ ]',
	checkboxCircleOn: '(Ã)',
	checkboxCircleOff: '( )',
	questionMarkPrefix: 'ï¼',
	oneHalf: '1/2',
	oneThird: '1/3',
	oneQuarter: '1/4',
	oneFifth: '1/5',
	oneSixth: '1/6',
	oneSeventh: '1/7',
	oneEighth: '1/8',
	oneNinth: '1/9',
	oneTenth: '1/10',
	twoThirds: '2/3',
	twoFifths: '2/5',
	threeQuarters: '3/4',
	threeFifths: '3/5',
	threeEighths: '3/8',
	fourFifths: '4/5',
	fiveSixths: '5/6',
	fiveEighths: '5/8',
	sevenEighths: '7/8'
};

if (platform === 'linux') {
	// the main one doesn't look that good on Ubuntu
	main.questionMarkPrefix = '?';
}

const figures = platform === 'win32' ? win : main;

const fn = str => {
	if (figures === main) {
		return str;
	}

	Object.keys(main).forEach(key => {
		if (main[key] === figures[key]) {
			return;
		}

		str = str.replace(new RegExp(escapeStringRegexp(main[key]), 'g'), figures[key]);
	});

	return str;
};

module.exports = Object.assign(fn, figures);
